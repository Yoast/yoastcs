name: Quicktest

on:
  # Run on pushes, including merges, to all branches except `main`.
  push:
    branches-ignore:
      - main
    paths-ignore:
      - '**.md'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  #### QUICK TEST STAGE ####
  # This is a much quicker test which only runs the unit tests and linting against low/high
  # of the supported PHP/CS dependencies combinations.
  quicktest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ['7.2', 'latest']
        cs_dependencies: ['lowest', 'stable']

        include:
          - php_version: 'latest'
            cs_dependencies: 'dev'

    name: "QTest${{ matrix.cs_dependencies == 'stable' && ' + Lint' || '' }}: PHP ${{ matrix.php_version }} - CS deps ${{ matrix.cs_dependencies }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # With stable PHPCS dependencies, allow for PHP deprecation notices.
      # Unit tests don't need to fail on those for stable releases where those issues won't get fixed anymore.
      - name: Setup ini config
        id: set_ini
        run: |
          if [ "${{ matrix.cs_dependencies }}" != "dev" ]; then
            echo 'PHP_INI=error_reporting=E_ALL & ~E_DEPRECATED, display_errors=On' >> $GITHUB_OUTPUT
          else
            echo 'PHP_INI=error_reporting=-1, display_errors=On' >> $GITHUB_OUTPUT
          fi

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage: none

      - name: "Composer: set PHPCS dependencies for tests (dev)"
        if: ${{ matrix.cs_dependencies == 'dev' }}
        run: >
          composer require --no-update --no-scripts --no-interaction
          squizlabs/php_codesniffer:"dev-master"
          phpcsstandards/phpcsutils:"dev-develop"
          wp-coding-standards/wpcs:"dev-develop as 3.99" # Alias needed to prevent composer conflict with VIPCS.

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-php-dependencies-with-composer
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: "Composer: downgrade PHPCS dependencies for tests (lowest) (with ignore platform)"
        if: ${{ matrix.cs_dependencies == 'lowest' }}
        run: >
          composer update --prefer-lowest --no-scripts --no-interaction
          squizlabs/php_codesniffer
          phpcsstandards/phpcsutils
          wp-coding-standards/wpcs

      - name: Verify installed standards
        run: vendor/bin/phpcs -i

      - name: Lint against parse errors
        if: matrix.cs_dependencies == 'stable'
        run: composer lint

      - name: Run the unit tests
        run: composer test
