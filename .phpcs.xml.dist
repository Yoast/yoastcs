<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    name="Yoast Coding Standard"
    xsi:noNamespaceSchemaLocation="./vendor/squizlabs/php_codesniffer/phpcs.xsd">

	<description>The Coding standard for the YoastCS Coding Standard itself.</description>

	<!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
	#############################################################################
	-->

	<!-- Scan all files. -->
	<file>.</file>

	<!-- Only check PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Show progress, show the error codes for each message (source). -->
	<arg value="sp"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8"/>

	<!-- Cache the results between runs. -->
	<arg name="cache" value="./.cache/phpcs.cache"/>


	<!--
	#############################################################################
	USE THE YoastCS RULESET
	#############################################################################
	-->

	<!-- YoastCS supports PHP 5.4 or higher. -->
	<config name="testVersion" value="5.4-"/>

	<rule ref="Yoast">

		<!-- Conflicts with PHPCS autoloading of sniffs. -->
		<exclude name="Yoast.Files.FileName"/>

		<!-- This sniff is irrelevant for a PHPCS standard which follows the PHPCS directory structure. -->
		<exclude name="Yoast.Files.TestDoubles"/>

		<!-- Conflicts with PHPCS autoloading of sniffs. -->
		<exclude name="Yoast.NamingConventions.ObjectNameDepth"/>

		<!-- Conflicts with variable names coming from PHPCS itself. -->
		<exclude name="WordPress.NamingConventions.ValidVariableName"/>

		<!-- Sniffs are not run in the context of WordPress. -->
		<exclude name="WordPress.Security"/>
		<exclude name="WordPress.WP"/>
	</rule>

	<!-- While PHPCompatibility is already included in the Yoast ruleset, it uses
		 the PHPCompatibilityWP ruleset, which excludes rules polyfilled by WP.
		 Setting the severity for all PHPCompatibility rules to 5 prevents WP
		 polyfilled functionality from not being flagged in this repo. -->
	<rule ref="PHPCompatibility">
		<severity>5</severity>
	</rule>

	<!-- Enforce PSR1 compatible namespaces. -->
	<rule ref="PSR1.Classes.ClassDeclaration"/>

	<!-- Enforce Final classes to prevent issues with the PHPCS autoloader. -->
	<rule ref="Universal.Classes.RequireFinalClass"/>


	<!--
	#############################################################################
	SNIFF SPECIFIC CONFIGURATION
	#############################################################################
	-->

	<rule ref="Yoast.NamingConventions.NamespaceName">
		<properties>
			<property name="prefixes" type="array">
				<element value="YoastCS\Yoast"/>
			</property>
			<property name="src_directory" type="array">
				<element value="Yoast"/>
			</property>
		</properties>
	</rule>

</ruleset>
